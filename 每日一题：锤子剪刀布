import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        Model mA = new Model();
        Model mB = new Model();

        for (int i = 0; i < N; i++) {
            String a = sc.next();
            String b = sc.next();
            judge(a,b,mA,mB);
        }

        System.out.println(mA.win + " " + mA.tie + " " + mA.lose);
        System.out.println(mB.win + " " + mB.tie + " " + mB.lose);
        System.out.println(getMostGen(mA.map) + " " + getMostGen(mB.map));
    }

    private static String getMostGen(Map<String, Integer> map) {
        if(map.get("C") >= map.get("J")) {
            if (map.get("C") > map.get("B")) {
                return "C";
            } else {
                return "B";
            }
        } else {
            if(map.get("J") > map.get("B")) {
                return "J";
            } else {
                return "B";
            }
        }
    }

    static class Model{
        int win;
        int tie;
        int lose;
        Map<String,Integer> map;

        Model() {
            map = new HashMap<>();
            map.put("B",0);
            map.put("C",0);
            map.put("J",0);
        }
    }

    private static void judge(String a, String b, Model mA, Model mB) {
        if(a.equals("C")){
            if(b.equals("C")){
                mA.tie ++;
                mB.tie ++;
            } else if(b.equals("J")){
                mA.win++;
                mB.lose++;
                mA.map.put("C",mA.map.get("C") + 1);
            } else {
                mA.lose++;
                mB.win++;
                mB.map.put("B",mA.map.get("B") + 1);
            }
        } else if(a.equals("J")) {
            if(b.equals("C")) {
                mA.lose++;
                mB.win++;
                mB.map.put("C",mA.map.get("C") + 1);
            } else if(b.equals("J")) {
                mA.tie++;
                mB.tie++;
            } else {
                mA.win++;
                mB.lose++;
                mA.map.put("J",mA.map.get("J") + 1);
            }
        } else {
            if(b.equals("C")) {
                mA.win++;
                mB.lose++;
                mA.map.put("B",mA.map.get("B") + 1);
            } else if(b.equals("J")){
                mA.lose++;
                mB.win++;
                mB.map.put("J",mA.map.get("J") + 1);
            } else {
                mA.tie++;
                mB.tie++;
            }
        }
    }
}
