public class Solution {
    /**
     * 二分查找
     * @param n int整型 数组长度
     * @param v int整型 查找值
     * @param a int整型一维数组 有序数组
     * @return int整型
     */
    public int upper_bound_ (int n, int v, int[] a) {
        // write code here
       int mid = 0;
       int left = 0;
        int right = n - 1;
        if(a[0] > v) {
            return 1;
        }
        while(left <= right) {
           mid = (left +right) / 2;
            if(a[mid] > v) {
                right = mid - 1;
            }else if(a[mid] < v) {
                left = mid + 1;
            } else {
                while(mid >= 0 && a[mid] == v) {
                    mid--;
                }
                return mid+2;
            }
        }
        return n+1;
    }
}
