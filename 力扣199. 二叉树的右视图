/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
       List<Integer> res = new ArrayList<>();
       if(root == null) {
           return res;
       }
       Queue<TreeNode> queue = new LinkedList<>();
       queue.add(root);
       while(!queue.isEmpty()) {
           int count = queue.size();
           while(count > 0) {
               count --;
               TreeNode cur = queue.poll();
               if(count == 0) {
                   res.add(cur.val);
               }
               if(cur.left != null) {
                   queue.add(cur.left);
               }
               if(cur.right != null) {
                   queue.add(cur.right);
               }
           }
       }
       return res;
    }
}
