import java.util.*;

/*
 * public class ListNode {
 *   int val;
 *   ListNode next = null;
 * }
 */

public class Solution {
    /**
     * 
     * @param head1 ListNode类 
     * @param head2 ListNode类 
     * @return ListNode类
     */
    public ListNode addInList (ListNode head1, ListNode head2) {
        ListNode  p1 = Ref(head1);
        ListNode  p2 = Ref(head2);
        ListNode  head = new ListNode(0);
        int flag = 0;
        while(p1!=null&&p2!=null){
            head.val = (p1.val + p2.val + flag)%10;
            flag = (p1.val + p2.val + flag)/10;
            ListNode temp = new ListNode(0);
            temp.next = head;
            head = temp;
            p1 = p1.next;
            p2=p2.next;
        }
        if(p1==null) {
            while(p2!=null){
                int num = p2.val+flag;
                head.val = num%10;
                flag = num/10;
                ListNode temp = new ListNode(0);
                temp.next = head;
                head = temp;
                p2=p2.next;
            }
        }
        if(p2==null) {
            while(p1!=null){
                int num = p1.val+flag;
                head.val = num%10;
                flag = num/10;
                ListNode temp = new ListNode(0);
                temp.next = head;
                head = temp;
                p1=p1.next;
            }
        }
        if(flag==0) return head.next;
        head.val = flag;
        return head;
    }
    private static ListNode Ref (ListNode head){
        if(head==null)return head;

        ListNode  p1 = null;
        ListNode  p2 = null;
        ListNode  p3 = null;
        p2 = head;
        p3 = p2.next;
        while(p2!=null){
            p2.next = p1;
            p1 = p2;
            p2 = p3;
            if(p3!=null)
                p3 = p3.next;
        }
        return p1;
    }
}
