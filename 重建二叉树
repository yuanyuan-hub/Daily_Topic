/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        return re(pre,0,pre.length-1,in,0,in.length-1);
    }
    
    public TreeNode re(int[] pre,int preL,int preR,int[] in,int inL,int inR) {
        if(preL > preR || inL > inR) {
            return null;
        }
        TreeNode root = new TreeNode(pre[preL]);
        for(int i = inL;i <= inR;i++) {
            if(pre[preL]==in[i]){
                root.left = re(pre,preL+1,preL+i-inL,in,inL,i-1);
                root.right = re(pre,preL+1+i-inL,preR,in,i+1,inR);
            }
        }
        return root;
    }
}
